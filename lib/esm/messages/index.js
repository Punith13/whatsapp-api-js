var ClientMessage=class{_build(){return JSON.stringify(this)}};var ClientLimitedMessageComponent=class{constructor(p,c,a,n){if(a.length>n)throw new Error(`${p} can't have more than ${n} ${c}`)}},ContactComponent=class{_build(){return this}},ContactMultipleComponent=class extends ContactComponent{get _many(){return!0}},ContactUniqueComponent=class extends ContactComponent{get _many(){return!1}};var Text=class extends ClientMessage{constructor(body,preview_url){super();if(body.length>4096)throw new Error("Text body must be less than 4096 characters");this.body=body,preview_url&&(this.preview_url=preview_url)}get _type(){return"text"}};var Location=class extends ClientMessage{constructor(longitude,latitude,name,address){super();this.longitude=longitude,this.latitude=latitude,name&&(this.name=name),address&&(this.address=address)}get _type(){return"location"}};var Reaction=class extends ClientMessage{constructor(message_id,emoji=""){super();if(emoji&&!/^\p{Extended_Pictographic}$/u.test(emoji))throw new Error("Reaction emoji must be a single emoji");this.message_id=message_id,this.emoji=emoji}get _type(){return"reaction"}};var Contacts=class extends ClientMessage{constructor(...contact){super();this.component=[];for(let components of contact){let contact2={};for(let component of components){let name=component._type;if(component._many)name in contact2||Object.defineProperty(contact2,name,{value:[]}),contact2[name].push(component._build());else{if(name in contact2)throw new Error(`Contact already has a ${name} component and _many is set to false`);contact2[name]=component._build()}}if(!contact2.name)throw new Error("Contact must have a name component");this.component.push(contact2)}}get _type(){return"contacts"}_build(){return JSON.stringify(this.component)}},Address=class extends ContactMultipleComponent{constructor(country,country_code,state,city,street,zip,type){super();country&&(this.country=country),country_code&&(this.country_code=country_code),state&&(this.state=state),city&&(this.city=city),street&&(this.street=street),zip&&(this.zip=zip),type&&(this.type=type)}get _type(){return"addresses"}},Birthday=class extends ContactUniqueComponent{constructor(year,month,day){super();if(year.length!==4)throw new Error("Year must be 4 digits");if(month.length!==2)throw new Error("Month must be 2 digits");if(day.length!==2)throw new Error("Day must be 2 digits");this.birthday=`${year}-${month}-${day}`}get _type(){return"birthday"}_build(){return this.birthday}},Email=class extends ContactMultipleComponent{constructor(email,type){super();email&&(this.email=email),type&&(this.type=type)}get _type(){return"emails"}},Name=class extends ContactUniqueComponent{constructor(formatted_name,first_name,last_name,middle_name,suffix,prefix){super();if(this.formatted_name=formatted_name,first_name&&(this.first_name=first_name),last_name&&(this.last_name=last_name),middle_name&&(this.middle_name=middle_name),suffix&&(this.suffix=suffix),prefix&&(this.prefix=prefix),Object.keys(this).length<2)throw new Error("Name must have at least one of the following: first_name, last_name, middle_name, prefix, suffix")}get _type(){return"name"}},Organization=class extends ContactUniqueComponent{constructor(company,department,title){super();company&&(this.company=company),department&&(this.department=department),title&&(this.title=title)}get _type(){return"org"}},Phone=class extends ContactMultipleComponent{constructor(phone,type,wa_id){super();phone&&(this.phone=phone),type&&(this.type=type),wa_id&&(this.wa_id=wa_id)}get _type(){return"phones"}},Url=class extends ContactMultipleComponent{constructor(url,type){super();url&&(this.url=url),type&&(this.type=type)}get _type(){return"urls"}};var Interactive=class extends ClientMessage{constructor(action,body,header,footer){super();if(action._type!=="product"&&!body)throw new Error("Interactive must have a body component");if(action._type==="product"&&header)throw new Error("Interactive must not have a header component if action is a single product");if(action._type==="product_list"&&header?.type!=="text")throw new Error("Interactive must have a text header component if action is a product list");if(header&&action._type!=="button"&&header?.type!=="text")throw new Error("Interactive header must be of type text");this.type=action._type,this.action=action,body&&(this.body=body),header&&(this.header=header),footer&&(this.footer=footer)}get _type(){return"interactive"}},Body=class{constructor(text){if(text.length>1024)throw new Error("Body text must be less than 1024 characters");this.text=text}},Footer=class{constructor(text){if(text.length>60)throw new Error("Footer text must be 60 characters or less");this.text=text}},Header=class{constructor(object){if(typeof object=="string"){if(object.length>60)throw new Error("Header text must be 60 characters or less");this.type="text"}else if(this.type=object._type,"caption"in object)throw new Error(`Header ${this.type} must not have a caption`);this[this.type]=object}},ActionButtons=class extends ClientLimitedMessageComponent{constructor(...button){super("Reply buttons","button",button,3);let ids=button.map(b=>b[b.type].id);if(ids.length!==new Set(ids).size)throw new Error("Reply buttons must have unique ids");let titles=button.map(b=>b[b.type].title);if(titles.length!==new Set(titles).size)throw new Error("Reply buttons must have unique titles");this.buttons=button}get _type(){return"button"}},Button=class{constructor(id,title){if(id.length>256)throw new Error("Button id must be 256 characters or less");if(/^ | $/.test(id))throw new Error("Button id cannot have leading or trailing spaces");if(!title.length)throw new Error("Button title cannot be an empty string");if(title.length>20)throw new Error("Button title must be 20 characters or less");this.type="reply",this.reply={title,id}}},ActionList=class extends ClientLimitedMessageComponent{constructor(button,...sections){super("Action","sections",sections,10);if(!button.length)throw new Error("Button content cannot be an empty string");if(button.length>20)throw new Error("Button content must be 20 characters or less");if(sections.length>1&&!sections.every(obj=>"title"in obj))throw new Error("All sections must have a title if more than 1 section is provided");this.button=button,this.sections=sections}get _type(){return"list"}},Section=class extends ClientLimitedMessageComponent{constructor(name,keys_name,elements,max,title,title_length=24){super(name,keys_name,elements,max);if(title&&title.length>title_length)throw new Error(`${name} title must be ${title_length} characters or less`);title&&(this.title=title)}},ListSection=class extends Section{constructor(title,...rows){super("ListSection","rows",rows,10,title);this.rows=rows}},Row=class{constructor(id,title,description){if(id.length>200)throw new Error("Row id must be 200 characters or less");if(title.length>24)throw new Error("Row title must be 24 characters or less");if(description&&description.length>72)throw new Error("Row description must be 72 characters or less");this.id=id,this.title=title,description&&(this.description=description)}};function isProductSections(obj){return obj[0]instanceof ProductSection}var ActionCatalog=class{get _type(){return this.product_retailer_id?"product":"product_list"}constructor(catalog_id,...products){let is_sections=isProductSections(products);if(is_sections&&products.length>1){if(products.length>10)throw new Error("Catalog must have between 1 and 10 product sections");for(let obj of products)if(!("title"in obj))throw new Error("All sections must have a title if more than 1 section is provided")}this.catalog_id=catalog_id,is_sections?this.sections=products:this.product_retailer_id=products[0].product_retailer_id}},ProductSection=class extends Section{constructor(title,...products){super("ProductSection","products",products,30,title);this.product_items=products}},Product=class{constructor(product_retailer_id){this.product_retailer_id=product_retailer_id}};var Media=class extends ClientMessage{constructor(file,isItAnID=!1){super();this[isItAnID?"id":"link"]=file}},Audio=class extends Media{get _type(){return"audio"}constructor(audio,isItAnID=!1){super(audio,isItAnID)}},Document=class extends Media{constructor(document,isItAnID=!1,caption,filename){super(document,isItAnID);caption&&(this.caption=caption),filename&&(this.filename=filename)}get _type(){return"document"}},Image=class extends Media{constructor(image,isItAnID=!1,caption){super(image,isItAnID);caption&&(this.caption=caption)}get _type(){return"image"}},Sticker=class extends Media{get _type(){return"sticker"}constructor(sticker,isItAnID=!1){super(sticker,isItAnID)}},Video=class extends Media{constructor(video,isItAnID=!1,caption){super(video,isItAnID);caption&&(this.caption=caption)}get _type(){return"video"}};var Template=class extends ClientMessage{constructor(name,language,...components){super();if(this.name=name,this.language=typeof language=="string"?new Language(language):language,components.length){let theres_only_body=components.length===1&&components[0]instanceof BodyComponent;this.components=components.map(cmpt=>cmpt._build(theres_only_body)).flat()}}get _type(){return"template"}},Language=class{constructor(code,policy="deterministic"){this.policy=policy,this.code=code}},Currency=class{get _type(){return"currency"}constructor(amount_1000,code,fallback_value){if(amount_1000<=0)throw new Error("Currency must have an amount_1000 greater than 0");this.amount_1000=amount_1000,this.code=code,this.fallback_value=fallback_value}},DateTime=class{get _type(){return"date_time"}constructor(fallback_value){this.fallback_value=fallback_value}},ButtonComponent=class extends ClientLimitedMessageComponent{constructor(sub_type,...parameters){super("ButtonComponent","parameters",parameters,3);let buttonType=sub_type==="url"?"text":"payload",processed=parameters.map(e=>new ButtonParameter(e,buttonType));this.type="button",this.sub_type=sub_type,this.parameters=processed}_build(){return this.parameters.map((p,i)=>({type:this.type,sub_type:this.sub_type,index:i.toString(),parameters:[p]}))}},ButtonParameter=class{constructor(param,type){this.type=type,this[type]=param}},HeaderComponent=class{constructor(...parameters){this.type="header",this.parameters=parameters}_build(){return this}},HeaderParameter=class{constructor(parameter){if(typeof parameter=="string"){if(parameter.length>60)throw new Error("Header text must be 60 characters or less");this.type="text"}else{if(parameter._type==="location"&&!(parameter.name&&parameter.address))throw new Error("Header location must have a name and address");this.type=parameter._type}Object.defineProperty(this,this.type,{value:parameter})}},BodyComponent=class{constructor(...parameters){this.type="body",this.parameters=parameters}_build(theres_only_body){if(this.parameters&&!theres_only_body){for(let param of this.parameters)if(param.text&&param.text?.length>1024)throw new Error("Body text must be 1024 characters or less")}return this}},BodyParameter=class{constructor(parameter){if(typeof parameter=="string"){if(parameter.length>32768)throw new Error("Body text must be 32768 characters or less");this.type="text"}else this.type=parameter._type;Object.defineProperty(this,this.type,{value:parameter})}};export{ActionButtons,ActionCatalog,ActionList,Address,Audio,Birthday,Body,BodyComponent,BodyParameter,Button,ButtonComponent,ButtonParameter,Contacts,Currency,DateTime,Document,Email,Footer,Header,HeaderComponent,HeaderParameter,Image,Interactive,Language,ListSection,Location,Media,Name,Organization,Phone,Product,ProductSection,Reaction,Row,Section,Sticker,Template,Text,Url,Video};
//# sourceMappingURL=index.js.map
